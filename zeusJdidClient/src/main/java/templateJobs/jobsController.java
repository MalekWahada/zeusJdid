package templateJobs;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.geometry.Pos;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.ResourceBundle;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import com.jfoenix.controls.JFXAutoCompletePopup;
import com.jfoenix.controls.JFXTextField;

import ejbService.PostServiceEjbRemote;
import entities.EmplomentOffer;
import entities.User;
import javafx.event.ActionEvent;

import javafx.scene.control.MenuItem;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.ImagePattern;
import javafx.scene.Parent;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.MenuButton;

import javafx.scene.shape.Circle;



public class jobsController implements Initializable {
	@FXML
	private ImageView homeImg;
	@FXML
	private ImageView inboxImg;
	@FXML
	private ImageView jobOfferImg;
	@FXML
	private ImageView notifImg;
	@FXML
	private ImageView contactImg;
	@FXML
	private MenuButton dropDownProfile;
	@FXML
	private MenuItem seeProfileAction;
	@FXML
	private MenuItem jobApplications;
	@FXML
	private MenuItem logOut;
	@FXML
	private Circle profileImg;
	@FXML
	private ImageView statImg;
	@FXML
	private JFXTextField searchTF;
	@FXML
	private Label jobOfferLabel;
	@FXML
	private VBox jobsVB;

	///////////////////////////////////// service parameters

	private User user;
	private Context context;
	String jndi = "zeusPI-ear/zeusPI-ejb/PostServiceEjb!ejbService.PostServiceEjbRemote";
	PostServiceEjbRemote daouser;

	// Event Listener on ImageView[#homeImg].onMouseClicked
	@FXML
	public void homeImgClicked(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateHome/home.fxml"));
		homeImg.getScene().setRoot(root);

	}

	// Event Listener on ImageView[#inboxImg].onMouseClicked
	@FXML
	public void inboxImgClicked(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateInbox/inbox.fxml"));
		homeImg.getScene().setRoot(root);
	}

	// Event Listener on ImageView[#jobOfferImg].onMouseClicked
	@FXML
	public void jobOfferImgClicked(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateJobs/jobs.fxml"));
		homeImg.getScene().setRoot(root);
	}

	// Event Listener on ImageView[#notifImg].onMouseClicked
	@FXML
	public void notifImgClicked(MouseEvent event) throws IOException {
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateNotif/notif.fxml"));
		homeImg.getScene().setRoot(root);
	}

	// Event Listener on ImageView[#contactImg].onMouseClicked
	@FXML
	public void contactImgAction(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateContact/contact.fxml"));
		homeImg.getScene().setRoot(root);
	}

	// Event Listener on MenuItem[#jobApplications].onAction
	@FXML
	public void jobApplicationsAction(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on MenuItem[#logOut].onAction
	@FXML
	public void logOutAction(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Circle[#profileImg].onMouseClicked
	@FXML
	public void profileImgAction(MouseEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on ImageView[#statImg].onMouseClicked
	@FXML
	public void statImgAction(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateStat/stat.fxml"));
		homeImg.getScene().setRoot(root);

	}

	//////////////////////////////// services display
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		try {
			intiJobs();
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void intiJobs() throws NamingException {

		context = new InitialContext();
		daouser = (PostServiceEjbRemote) context.lookup(jndi);
		///////////////////////// after ska
		User user = daouser.findUser(3);
		/////////////////////////

		////////////////////////////   notifications
		long nbReadNotif = daouser.countReadOrNot(user.getId());
		if(nbReadNotif>0)
			notifImg.setImage(new Image("/icons/notifRed.png"));
		else notifImg.setImage(new Image("/icons/notifBl.png"));
		////////////////////
		
		ArrayList<EmplomentOffer> lOffers = daouser.findAllJobs();
		HBox hBox = new HBox();
		hBox.setSpacing(30);
		int i = 0;
		for (EmplomentOffer eo : lOffers) {

			VBox vb1 = new VBox();

			////////////////////////// user picture
			Circle entrepCirc = new Circle(50, 40, 40);
			Image imgUser = new Image("/icons/entrepriseBl.png");
			entrepCirc.setFill(new ImagePattern(imgUser));

			////////////////////////// lab job Title
			Label labJobTitle = new Label();
			labJobTitle.setText(eo.getJobTitle());
			labJobTitle.setStyle("-fx-font-weight: bold;\n" + "-fx-font: 20 arial;");

			////////////////////////// lab name
			Label postedByLab = new Label();
			postedByLab.setText("Posted by:  " + eo.getPostedBy().getEntrepriseId().getName());
			// postedByLab.setStyle("-fx-font-weight: bold;\n" + "-fx-font: 20
			// arial;");

			//////////////////////// lab time
			Label labTimeJob = new Label();
			labTimeJob.setText("At :  " + eo.getPubDate());

			//////////////////////// lab description
			Label labjobDesc = new Label();
			if (eo.getJobDescr().length() > 15)
				labjobDesc.setText("Job Description :  " + eo.getJobDescr().substring(0, 15) + " ... ");
			else
				labjobDesc.setText("Job Description :  " + eo.getJobDescr());

			//////////////////////// lab time
			Button seeFulltn = new Button("See the Opportunity");
			seeFulltn.setStyle("-fx-background-color: #668cff;");
			///////////////////////////////   hmza + amin
			seeFulltn.setOnAction((ActionEvent e1) -> {
				
				
				
			});
			
			
			

			vb1.getChildren().addAll(entrepCirc, labJobTitle, postedByLab, labTimeJob, labjobDesc, seeFulltn);
			vb1.setAlignment(Pos.CENTER);
			String cssLayout = "-fx-border-color: #001a1a;";
			vb1.setStyle(cssLayout);
			vb1.setPrefWidth(190);
			vb1.setPrefHeight(209);

			hBox.getChildren().add(vb1);
			if (i % 3 == 2) {
				jobsVB.getChildren().add(hBox);
				hBox = new HBox();
				hBox.setSpacing(30);
			}

			if (i > lOffers.size() - 2)
				jobsVB.getChildren().add(hBox);
			i++;

		}
		jobsVB.setSpacing(30);

	}
	///////////////////////////// search textfield
	@FXML
	private void searchTFAction(KeyEvent event) throws NamingException {

		// AutoCompleteTextField searchTF = new AutoCompleteTextField();
		//
		// searchTF1.getEntries();
		
		
		
		
		JFXAutoCompletePopup<String> autoCompletePopup = new JFXAutoCompletePopup<>();
		autoCompletePopup.getSuggestions().addAll("pp", "kk","kk" ,"...");
		
		autoCompletePopup.setSelectionHandler(event1 -> { // (ActionEvent e) ->
							// {
			searchTF.setText(event1.getObject());

			System.out.println(
					"helllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll       " + event1.getObject());

			try {
				context = new InitialContext();

				daouser = (PostServiceEjbRemote) context.lookup(jndi);
				///////////////////////// after ska
				User user = daouser.findUser(3);
				/////////////////////////

				ArrayList<EmplomentOffer> lOffers = daouser.searchJobsOnTitle(event1.getObject());
				HBox hBox = new HBox();
				hBox.setSpacing(30);
				int i = 0;
				
				System.out.println("hhhhhhhhhhhhhhhhhhhhhhh   "+lOffers.size());
				jobsVB.getChildren().clear();
				for (EmplomentOffer eo : lOffers) {

					VBox vb1 = new VBox();

					////////////////////////// user picture
					Circle entrepCirc = new Circle(50, 40, 40);
					Image imgUser = new Image("/icons/entrepriseBl.png");
					entrepCirc.setFill(new ImagePattern(imgUser));

					////////////////////////// lab job Title
					Label labJobTitle = new Label();
					labJobTitle.setText(eo.getJobTitle());
					labJobTitle.setStyle("-fx-font-weight: bold;\n" + "-fx-font: 20 arial;");

					////////////////////////// lab name
					Label postedByLab = new Label();
					postedByLab.setText("Posted by:  " + eo.getPostedBy().getEntrepriseId().getName());
					// postedByLab.setStyle("-fx-font-weight: bold;\n" +
					// "-fx-font: 20
					// arial;");

					//////////////////////// lab time
					Label labTimeJob = new Label();
					labTimeJob.setText("At :  " + eo.getPubDate());

					//////////////////////// lab description
					Label labjobDesc = new Label();
					if (eo.getJobDescr().length() > 15)
						labjobDesc.setText("Job Description :  " + eo.getJobDescr().substring(0, 15) + " ... ");
					else
						labjobDesc.setText("Job Description :  " + eo.getJobDescr());

					//////////////////////// lab time
					Button seeFulltn = new Button("See the Opportunity");
					seeFulltn.setStyle("-fx-background-color: #668cff;");
					/////////////////////////////// hmza + amin
					seeFulltn.setOnAction((ActionEvent e1) -> {

					});

					vb1.getChildren().addAll(entrepCirc, labJobTitle, postedByLab, labTimeJob, labjobDesc, seeFulltn);
					vb1.setAlignment(Pos.CENTER);
					String cssLayout = "-fx-border-color: #001a1a;";
					vb1.setStyle(cssLayout);
					vb1.setPrefWidth(190);
					vb1.setPrefHeight(209);

					hBox.getChildren().add(vb1);
					if (i % 3 == 2) {
						jobsVB.getChildren().add(hBox);
						hBox = new HBox();
						hBox.setSpacing(30);
					}

					if (i > lOffers.size() - 2)
						jobsVB.getChildren().add(hBox);
					i++;

				}
				jobsVB.setSpacing(30);

			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			

		});
		// filtering options
		searchTF.textProperty().addListener(observable -> {
			autoCompletePopup.filter(string -> string.toLowerCase().contains(searchTF.getText().toLowerCase()));
			if (autoCompletePopup.getFilteredSuggestions().isEmpty() || searchTF.getText().isEmpty()) {
				autoCompletePopup.hide();
				jobsVB.getChildren().clear();
				try {
					intiJobs();
				} catch (NamingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
					
			} else {
				autoCompletePopup.show(searchTF);
			}
		});
	}
	

}
