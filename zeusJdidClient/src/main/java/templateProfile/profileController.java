package templateProfile;

import com.jfoenix.controls.JFXButton;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import com.jfoenix.controls.JFXTextArea;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.ResourceBundle;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.JOptionPane;

import com.jfoenix.controls.JFXTextField;


import ejbService.UserServiceEjbRemote;
import entities.Education;
import entities.ProfessionalExp;
import entities.Skill;
import entities.certification;
import interUser.AcceuilController;
import javafx.event.ActionEvent;

import javafx.scene.control.MenuItem;
import javafx.scene.control.Slider;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

import javafx.scene.input.MouseEvent;
import javafx.scene.paint.ImagePattern;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.ButtonType;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.MenuButton;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;

import javafx.scene.shape.Circle;
import javafx.scene.text.Font;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.stage.FileChooser.ExtensionFilter;
import utils.Upload;

public class profileController implements Initializable{
	@FXML
	private ImageView homeImg;
	@FXML
	private ImageView inboxImg;
	@FXML
	private ImageView jobOfferImg;
	@FXML
	private ImageView notifImg;
	@FXML
	private ImageView contactImg;
	@FXML
	private MenuButton dropDownProfile;
	@FXML
	private MenuItem seeProfileAction;
	@FXML
	private MenuItem jobApplications;
	@FXML
	private MenuItem logOut;
	@FXML
	private Circle profileImg;
	@FXML
	private ImageView statImg;
	@FXML
	private JFXTextField searchTF;
    @FXML
    private Label name;
    @FXML
    private Circle imageCircle;
    @FXML
    private Label birthday;
    @FXML
    private Label occupation;
    @FXML
    private JFXButton seecontact;
    @FXML
    private ImageView changimg;
    @FXML
    private ImageView seecontactss;
    @FXML
    private ImageView seefollowss;
    @FXML
    private JFXButton seefollow;
    @FXML
    private JFXButton updateinfo;
    @FXML
    private ImageView updateifoimg;
    @FXML
    private VBox Skilsvb;
    @FXML
    private VBox oneskill;
    @FXML
    private Label oneskillSpecialityname;
    @FXML
    private Label oneskillRAIT;
    @FXML
    private HBox oneskillactions;
    @FXML
    private ImageView updateskill;
    @FXML
    private ImageView deleteskill;
    @FXML
    private ImageView askrec;
    @FXML
    private ImageView seerec;
    @FXML
    private VBox expvbox;
 
 

    @FXML
    private ImageView addskil;
    @FXML
    private ImageView addexp;
   
    @FXML
    private ImageView addeducaction;
    @FXML
    private ImageView updateeduc;
    @FXML
    private ImageView deleteeduc;
    @FXML
    private Label dateeduc;
    @FXML
    private ImageView addcertif;
    @FXML
    private Label certifnamespec;
    @FXML
    private Label centercertifna;
    @FXML
    private Label datecertif;
    @FXML
    private ImageView updatecertif;
    @FXML
    private ImageView deletecertif;
    @FXML
    private Label educdegspec;
    @FXML
    private Label school;
    @FXML
    private VBox Skileduc;
    @FXML
    private VBox oneeduc;
    @FXML
    private VBox expvbox1;
    @FXML
    private HBox oneeducactions;
	
     //////////////   service
   Context context ;
	String jndi = "zeusPI-ear/zeusPI-ejb/UserServiceEjb!ejbService.UserServiceEjbRemote";

	UserServiceEjbRemote dao ;
	
	// Event Listener on ImageView[#homeImg].onMouseClicked
	@FXML
	public void homeImgClicked(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateHome/home.fxml"));
		homeImg.getScene().setRoot(root);
		
	}
	// Event Listener on ImageView[#inboxImg].onMouseClicked
	@FXML
	public void inboxImgClicked(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateInbox/inbox.fxml"));
		homeImg.getScene().setRoot(root);
	}
	// Event Listener on ImageView[#jobOfferImg].onMouseClicked
	@FXML
	public void jobOfferImgClicked(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateJobs/jobs.fxml"));
		homeImg.getScene().setRoot(root);
	}
	// Event Listener on ImageView[#notifImg].onMouseClicked
	@FXML
	public void notifImgClicked(MouseEvent event) throws IOException {
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateNotif/notif.fxml"));
		homeImg.getScene().setRoot(root);	
		}
	// Event Listener on ImageView[#contactImg].onMouseClicked
	@FXML
	public void contactImgAction(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateContact/contact.fxml"));
		homeImg.getScene().setRoot(root);
	}
	// Event Listener on MenuItem[#jobApplications].onAction
	@FXML
	public void jobApplicationsAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#logOut].onAction
	@FXML
	public void logOutAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Circle[#profileImg].onMouseClicked
	@FXML
	public void profileImgAction(MouseEvent event) throws IOException {

		Stage primaryStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        Parent root = FXMLLoader.load(getClass().getResource("/templateProfile/mypro.fxml"));
        Scene scene = new Scene(root);
        primaryStage.setTitle("My profile!");
        
        primaryStage.setScene(scene);
        primaryStage.show();	// TODO Autogenerated
	}
	// Event Listener on ImageView[#statImg].onMouseClicked
	@FXML
	public void statImgAction(MouseEvent event) throws IOException {
		// TODO Autogenerated
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("templateStat/stat.fxml"));
		homeImg.getScene().setRoot(root);	
		
	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {

    	try {
    		context = new InitialContext();
			dao = (UserServiceEjbRemote) context.lookup(jndi);
			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());
		} catch (NamingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
			


		// TODO Auto-generated method stub
		Skilsvb.getChildren().removeAll();
		Skilsvb.getChildren().clear();
		
		expvbox.getChildren().removeAll();
		expvbox.getChildren().clear();
		expvbox1.getChildren().removeAll();
		expvbox1.getChildren().clear();
		Skileduc.getChildren().removeAll();
		Skileduc.getChildren().clear();	
		Image imgUser = new Image(AcceuilController.usconnected.getPictureURL());
		profileImg.setFill(new ImagePattern(imgUser));
		imageCircle.setFill(new ImagePattern(imgUser));
		if((AcceuilController.usconnected.getFirstname()).equals("")||(AcceuilController.usconnected.getLastname()).equals(""))
		{
			name.setText("");}
		else
		{
			name.setText(AcceuilController.usconnected.getFirstname()+"  "+AcceuilController.usconnected.getLastname());}
			
		
		DateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
		String strDate = dateFormat.format(AcceuilController.usconnected.getBirthDate());
		birthday.setText(strDate);
		occupation.setText(AcceuilController.usconnected.getActualOccupation()+" At "+AcceuilController.usconnected.getEntreschool());
		
		List<Skill> l=AcceuilController.usconnected.getSkills();
		List<ProfessionalExp> lprof= AcceuilController.usconnected.getProfessionalexps();
		List<Education> leduc= AcceuilController.usconnected.getEducations();
		List<certification> lcert= AcceuilController.usconnected.getCertifications();
		String vv = oneskillSpecialityname.getStyle();
		
		//////////////////////////////Tableau Skill///////////////////////////////////////
		if (l.size()>0)
		for(Skill s:l){
			oneskillSpecialityname = new Label();
			oneskillSpecialityname.setStyle(vv);
			
			
			oneskillRAIT = new Label();
			oneskillSpecialityname.setStyle("-fx-font-weight: bold;");
			oneskillSpecialityname.setFont(new Font(25));
			System.out.println(s.getSpecialite()+" "+s.getName());
			oneskillSpecialityname.setText(s.getSpecialite()+" "+s.getName());
			
			oneskillRAIT.setText("Level "+String.valueOf(s.getRating()));
			oneskillRAIT.setStyle("-fx-font-weight: bold;");
			oneskillRAIT.setFont(new Font(15));
			
			///////////////////   acto skill
			Image imgSklDelete = new Image(getClass().getResourceAsStream("/icons/delete.png"));
			Image imgSklupdt = new Image(getClass().getResourceAsStream("/icons/crayon.png"));
			
			ImageView imVewDe = new ImageView(imgSklDelete);
			ImageView imVewUpd = new ImageView(imgSklupdt);
			
			
			HBox hbActo = new HBox(imVewUpd,imVewDe);
		VBox vbSkil = new VBox(oneskillSpecialityname,oneskillRAIT,hbActo);		
		
		Skilsvb.getChildren().add(vbSkil);
        	//textField tf=new TextField();
        	  //	Skilsvb.getChildren().add(new Label("test"));
		Skilsvb.setSpacing(10);
		imVewDe.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
	
					try {
						context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);

			    		dao.deleteSkills(s);
		AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	
			    		
			    		initialize(null, null);
			    
					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					  event.consume();	
		       
		     }
		});
		
		imVewUpd.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
		         
		     	TextField tf=new TextField();
		    	TextField tf1=new TextField();

		    	
		    	
		    	Alert alert = new Alert(AlertType.INFORMATION, " Add new skill", ButtonType.OK,  ButtonType.CANCEL);
		    	 ComboBox<String> specialitycombo=new ComboBox<>();
		 		
				 Slider evaluates =new Slider();
//			      <Slider fx:id="evaluates" layoutX="165.0" layoutY="257.0" majorTickUnit="10.0" max="10.0" min="1.0" minorTickCount="1" showTickLabels="true" showTickMarks="true" value="1.0" />
			evaluates.setMajorTickUnit(10.0);
			evaluates.setMax(10.0);
			evaluates.setMinorTickCount(1);
			evaluates.setShowTickLabels(true);
			evaluates.setShowTickLabels(true);
evaluates.setValue(s.getRating());

				 TextField names=new TextField();
				 names.setText(s.getName());
				 ObservableList<String> options= FXCollections.observableArrayList("Informatique","Literature","Medecine","Bricolage");
		specialitycombo.setItems(options);
		specialitycombo.setValue(s.getSpecialite());
		Label l=new Label("Evaluate your self");
		specialitycombo.setPromptText("Spciality");
		VBox vb1 = new VBox(names,specialitycombo,l,evaluates);
		alert.getDialogPane().setContent(vb1);
		
		alert.showAndWait();
		
		    	if (alert.getResult() == ButtonType.OK) {
		    		
					try {
						context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);
			    	
			    		s.setName(names.getText());
			    		
			    		s.setRating((int) evaluates.getValue());
			    		s.setSpecialite(specialitycombo.getValue());
			    		s.setUser(AcceuilController.usconnected);
			    		System.out.println(s);
			    		
			    		
			    		Skill test=dao.updateskill(s);
			    		System.out.println(test);
			    		AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());
			    		JOptionPane.showMessageDialog(null, "Your Skill is updated","Display Message",JOptionPane.INFORMATION_MESSAGE);
			    		    	

			    		initialize(null, null);		

					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}		    	
		    							
		    	}
		    
    
		    	 
		    	 
		    	 
		         event.consume();
		     }
		});
					
			
			
			
		}
		
		//////////////////////////////Tableau exppro///////////////////////////////////////
		if (lprof.size()>0)
		for(ProfessionalExp exp:lprof){
			Label jobetentr = new Label();
			jobetentr.setStyle(vv);
			
			
			Label dateexp = new Label();
			jobetentr.setStyle("-fx-font-weight: bold;");
			jobetentr.setFont(new Font(25));
			jobetentr.setText(exp.getJobname()+" at "+exp.getEntrepriseName());
			
			dateexp.setText("from "+dateFormat.format(exp.getDatedebut())+" To "+dateFormat.format(exp.getDatefin()));
			dateexp.setStyle("-fx-font-weight: bold;");
			dateexp.setFont(new Font(15));
			JFXTextArea misst=new JFXTextArea();
			misst.setFont(new Font(13));
			misst.setPrefHeight(77);
			
			misst.setText(exp.getJobdescription());
			misst.setEditable(false);
			///////////////////   acto skill
			Image imgSklDelete = new Image(getClass().getResourceAsStream("/icons/delete.png"));
			Image imgSklupdt = new Image(getClass().getResourceAsStream("/icons/crayon.png"));
			
			ImageView imVewDeexp = new ImageView(imgSklDelete);
			ImageView imVewUpdexp = new ImageView(imgSklupdt);
			
			HBox hbActo = new HBox(jobetentr,imVewUpdexp,imVewDeexp);
		VBox oneexpvbox = new VBox(hbActo,dateexp,misst);		
		
		expvbox.getChildren().add(oneexpvbox);
        	//textField tf=new TextField();
        	  //	Skilsvb.getChildren().add(new Label("test"));
		expvbox.setSpacing(10);
		
		imVewDeexp.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
	
		    		
					try {
						context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);

			    		dao.deleteProfessionalExp(exp);
		AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	
			    		
			    		initialize(null, null);
					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		    		
		         event.consume();
		     }
		});
		
		imVewUpdexp.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
		     	TextField namej=new TextField();
		    	namej.setText(exp.getJobname());
		  
		    	
		    	DatePicker datedebexp=new DatePicker();
		    	datedebexp.setValue(exp.getDatedebut().toLocalDate());
		    	   
		    	 DatePicker datefexp=new DatePicker();
		     	datefexp.setValue(exp.getDatefin().toLocalDate());

		    	 TextField entreprisen=new TextField();
		    	 entreprisen.setText(exp.getEntrepriseName());
		    	 TextArea missionta=new TextArea();
		    	 missionta.setText(exp.getJobdescription());
		    	 
		    	 Alert alert = new Alert(AlertType.INFORMATION, " Add new experience", ButtonType.YES,  ButtonType.CANCEL);
		    	 VBox vb1 = new VBox(namej,entreprisen,datedebexp,datefexp,missionta);
		    	 alert.getDialogPane().setContent(vb1);
		    	 alert.showAndWait();		
		     	if (alert.getResult() == ButtonType.YES) {
		     	
		 			ProfessionalExp pe=exp;
					
					pe.setDatedebut(Date.valueOf(datedebexp.getValue()));
					pe.setDatefin(Date.valueOf(datedebexp.getValue()));
					pe.setJobdescription(missionta.getText());
					pe.setJobname(namej.getText());
					pe.setEntrepriseName(entreprisen.getText());
					try {
						String jndi = "zeusPI-ear/zeusPI-ejb/UserServiceEjb!ejbService.UserServiceEjbRemote";
						context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);
					
						dao.updateprof(exp);
						JOptionPane.showMessageDialog(null, "Your Experience is updated","Display Message",JOptionPane.INFORMATION_MESSAGE);
				
						AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());
						initialize(null, null);
				     	
					     event.consume();
					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				    	

				
		     							
		     	}
		    
		     }
		});
					
			
			
			
		}
		
		//////////////////////////////Tableau cert///////////////////////////////////////
		if (lcert.size()>0)
		for(certification c:lcert){
			Label speccert = new Label();
			speccert.setStyle(vv);
			
			
		
			speccert.setStyle("-fx-font-weight: bold;");
			speccert.setFont(new Font(25));
			speccert.setText(c.getField()+" : "+c.getName());
			Label center = new Label();	
			center.setText("certifed by "+c.getCentrecertif());
			center.setStyle("-fx-font-weight: bold;");
			center.setFont(new Font(15));
			
			Label datecert = new Label();	
			datecert.setText("At "+dateFormat.format(c.getDateissue()));
			datecert.setStyle("-fx-font-weight: bold;");
			datecert.setFont(new Font(15));

						
			///////////////////   acto skill
			Image imgSklDelete = new Image(getClass().getResourceAsStream("/icons/delete.png"));
			Image imgSklupdt = new Image(getClass().getResourceAsStream("/icons/crayon.png"));
			
			ImageView imVewDecert = new ImageView(imgSklDelete);
			ImageView imVewUpdcert = new ImageView(imgSklupdt);
			
			
			HBox hbActo = new HBox(datecert,imVewUpdcert,imVewDecert);
		VBox onecert = new VBox(speccert,center,hbActo);		
		
		
		
		Skileduc.getChildren().add(onecert);
        	//textField tf=new TextField();
        	  //	Skilsvb.getChildren().add(new Label("test"));
		Skileduc.setSpacing(10);
		imVewDecert.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
	
		   
					try { context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);
dao.deletecertif(c);
		AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	
			    		
			    		initialize(null, null);
					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		    		
		         event.consume();
		     }
		});
		
		imVewUpdcert.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {

		     	TextField namescertif=new TextField();
		     	namescertif.setText(c.getName());
		     	

		    	 TextField centernam=new TextField();
		    	 centernam.setText(c.getCentrecertif());
		    	 
		     	 ComboBox<String> specombo=new ComboBox();
		     	ObservableList<String> options= FXCollections.observableArrayList("Informatique","Literature","Medecine","Bricolage");
		 specombo.setPromptText("speciality");
		     	specombo.setValue(c.getField());
		     	
		     	DatePicker datecertif=new DatePicker();
		     	datecertif.setValue(c.getDateissue().toLocalDate());
		     	
		     	
		     
		     	   

		     	 Alert alert = new Alert(AlertType.INFORMATION, " Add new diplome", ButtonType.YES,  ButtonType.CANCEL);
		     	 VBox vb1 = new VBox(namescertif,specombo,centernam,datecertif);
		     	 alert.getDialogPane().setContent(vb1);
		     	 alert.showAndWait();		
		      	if (alert.getResult() == ButtonType.YES) {
		     		certification cert=c;
		     		cert.setDateissue(Date.valueOf(datecertif.getValue()));
		     		cert.setField(specombo.getValue());
		     		cert.setName(namescertif.getText());
		     		cert.setUser(AcceuilController.usconnected);
		     		cert.setCentrecertif(centernam.getText());
		     		try {
						context = new InitialContext();
			 			dao = (UserServiceEjbRemote) context.lookup(jndi);
				 		
			     		dao.updatecert(cert);
			     		JOptionPane.showMessageDialog(null, "Your Certification is updating","Display Message",JOptionPane.INFORMATION_MESSAGE); 
			     		
			 			
			 	
			 			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	

					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

		 			initialize(null, null);
		      	
		      	
		      							
		       
		     
		     
		     
		     
		     }
		     

		         event.consume();
		     }
		});
					
			
			
			
		}
		
		//////////////////////////////Tableau education///////////////////////////////////////
		if (leduc.size()>0)
		for(Education ed:leduc){
			Label degspec = new Label();
			degspec.setStyle(vv);
			
			
		
			degspec.setStyle("-fx-font-weight: bold;");
			degspec.setFont(new Font(25));
			degspec.setText(ed.getDegree()+" in "+ed.getSpecialite());
			Label school = new Label();
			school.setText("At "+ed.getSchool());
			school.setStyle("-fx-font-weight: bold;");
			school.setFont(new Font(15));
			Label dateed = new Label();
			dateed.setText("from "+dateFormat.format(ed.getDatedeb())+" To "+dateFormat.format(ed.getDatefin()));
			dateed.setStyle("-fx-font-weight: bold;");
			dateed.setFont(new Font(15));
			
			///////////////////   acto skill
			Image imgSklDelete = new Image(getClass().getResourceAsStream("/icons/delete.png"));
			Image imgSklupdt = new Image(getClass().getResourceAsStream("/icons/crayon.png"));
			
			ImageView imVewDeed = new ImageView(imgSklDelete);
			ImageView imVewUpded = new ImageView(imgSklupdt);
			
			HBox hbActo = new HBox(degspec,imVewUpded,imVewDeed);
		VBox oneexpvbox = new VBox(hbActo,school,dateed);		
		
		expvbox1.getChildren().add(oneexpvbox);
        	//textField tf=new TextField();
        	  //	Skilsvb.getChildren().add(new Label("test"));
		expvbox1.setSpacing(10);
		
		imVewDeed.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
	
		    		
					try {
						context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);
			    		dao.deleteeduc(ed);
		AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	
			    		
			    		initialize(null, null);
					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		    		
		         event.consume();
		     }
		});
		
		imVewUpded.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {

		     @Override
		     public void handle(MouseEvent event) {
		         
		     	TextField namespeciality=new TextField();
		     	namespeciality.setText(ed.getSpecialite());
		   
		     	 ComboBox<String> degreecombo=new ComboBox<>();
		     	ObservableList<String> options= FXCollections.observableArrayList("Engineering","Master","doctoral degree","Licence");  	
		     	degreecombo.setValue(ed.getDegree());
		     	degreecombo.setItems(options);
		     	DatePicker datedebeduc=new DatePicker();
		     	datedebeduc.setValue(ed.getDatedeb().toLocalDate());
		     	   
		     	 DatePicker datefeduc=new DatePicker();
		     	 datefeduc.setValue(ed.getDatefin().toLocalDate());

		     	 TextField schoolnam=new TextField();
		     	 schoolnam.setText(ed.getSchool());
		     	 
		     	 
		     	 Alert alert = new Alert(AlertType.INFORMATION, " Add new diplome", ButtonType.YES,  ButtonType.CANCEL);
		     	 VBox vb1 = new VBox(namespeciality,degreecombo,schoolnam,datedebeduc,datefeduc);
		     	 alert.getDialogPane().setContent(vb1);
		     	 alert.showAndWait();		
		      	if (alert.getResult() == ButtonType.YES) {
		      	
		     		
		     		ed.setDatedeb(Date.valueOf(datedebeduc.getValue()));
		     		ed.setDatefin(Date.valueOf(datefeduc.getValue()));
		     		ed.setDegree(degreecombo.getValue());
		     		ed.setUser(AcceuilController.usconnected);
		     		ed.setSchool(schoolnam.getText());
		     		ed.setSpecialite(namespeciality.getText());
		     		
		 			try {
						context = new InitialContext();
						dao = (UserServiceEjbRemote) context.lookup(jndi);
				 		
			 			dao.updateUser(ed);
			 			JOptionPane.showMessageDialog(null, "Your School is updated","Display Message",JOptionPane.INFORMATION_MESSAGE);
			 	
			 			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	


					} catch (NamingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		 				 			initialize(null, null);
		      	
		      	
		      							
		      	}    
		     
		     
		     
		    	 
		    	 
		    	 
		    	 
		    	 
		         event.consume();
		     }
		});
					
			
			
			
		}
		
		
	
		
	}
	

    @FXML
    private void seecontactaction(ActionEvent event) {
    }

    @FXML
    private void changimgAction(MouseEvent event) throws FileNotFoundException, IOException, NamingException {
		  FileChooser fileChooser = new FileChooser();
	        fileChooser.setTitle("Selectionnez votre image");
	        fileChooser.getExtensionFilters().addAll(
	        new ExtensionFilter("Image Files", "*.png", "*.jpg", "*.gif"));

	        File selectedFile = fileChooser.showOpenDialog(null);

	        if (selectedFile != null) {
	          
	           Upload u = new Upload();
	           u.upload(selectedFile);
	          
	            
	                 Image image = new Image("file:///C://wamp64//www//pi2Images//"+selectedFile.getName());
	       String img="file:///C://wamp64//www//pi2Images//"+selectedFile.getName();      
	       
	       
	       
	   	context = new InitialContext();
		dao = (UserServiceEjbRemote) context.lookup(jndi);
		AcceuilController.usconnected.setPictureURL(img);
		AcceuilController.usconnected=dao.updateUser(AcceuilController.usconnected);
			JOptionPane.showMessageDialog(null, "Your Picture is updated","Display Message",JOptionPane.INFORMATION_MESSAGE);
	
			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	

initialize(null, null);
	}
    
    
    
    
    }

    @FXML
    private void seecontactaction(MouseEvent event) {
    }

    @FXML
    private void seefollowaction(MouseEvent event) {
    }

    @FXML
    private void seefollowaction(ActionEvent event) {
    }

    @FXML
    private void updateinfoAction(ActionEvent event) throws NamingException {

     	TextField Firstname=new TextField();
     	Firstname.setText(AcceuilController.usconnected.getFirstname());
     	TextField lastname=new TextField();
    lastname.setText(AcceuilController.usconnected.getLastname());

     	TextField email=new TextField();
     	email.setText(AcceuilController.usconnected.getEmail());
     	
   DatePicker dt=new DatePicker();
   dt.setValue(AcceuilController.usconnected.getBirthDate().toLocalDate());
	
   TextField ocupation=new TextField();
	ocupation.setText(AcceuilController.usconnected.getActualOccupation());
 	
	TextField entrsc=new TextField();
 	entrsc.setText(AcceuilController.usconnected.getEntreschool());
   
 	TextArea bio=new TextArea();
bio.setText(AcceuilController.usconnected.getBio());
     	 

     	 Alert alert = new Alert(AlertType.INFORMATION, " update information", ButtonType.YES,  ButtonType.CANCEL);
     	 VBox vb1 = new VBox(Firstname,lastname,email,dt,ocupation,entrsc,bio);
     	 alert.getDialogPane().setContent(vb1);
     	 alert.showAndWait();		
      	if (alert.getResult() == ButtonType.YES) {
      		AcceuilController.usconnected.setActualOccupation(ocupation.getText());
      		AcceuilController.usconnected.setEntreschool(entrsc.getText());
      		AcceuilController.usconnected.setEmail(email.getText());
      		AcceuilController.usconnected.setBio(bio.getText());
      		AcceuilController.usconnected.setBirthDate(Date.valueOf(dt.getValue()));
      		AcceuilController.usconnected.setFirstname(Firstname.getText());
      		AcceuilController.usconnected.setLastname(lastname.getText());
      		
				context = new InitialContext();
				dao = (UserServiceEjbRemote) context.lookup(jndi);
		 		
	 			dao.updateUser(AcceuilController.usconnected);
	 			JOptionPane.showMessageDialog(null, "Your School is updated","Display Message",JOptionPane.INFORMATION_MESSAGE);
	 	
	 			AcceuilController.usconnected=dao.updateUser(AcceuilController.usconnected);
	 			initialize(null, null);

      	}
    
    }

    @FXML
    private void updateinfoAction(MouseEvent event) throws NamingException {

     	TextField Firstname=new TextField();
     	Firstname.setText(AcceuilController.usconnected.getFirstname());
     	TextField lastname=new TextField();
    lastname.setText(AcceuilController.usconnected.getLastname());

     	TextField email=new TextField();
     	email.setText(AcceuilController.usconnected.getEmail());
     	
   DatePicker dt=new DatePicker();
   dt.setValue(AcceuilController.usconnected.getBirthDate().toLocalDate());
	
   TextField ocupation=new TextField();
	ocupation.setText(AcceuilController.usconnected.getActualOccupation());
 	
	TextField entrsc=new TextField();
 	entrsc.setText(AcceuilController.usconnected.getEntreschool());
   
 	TextArea bio=new TextArea();
bio.setText(AcceuilController.usconnected.getBio());
     	 

     	 Alert alert = new Alert(AlertType.INFORMATION, " update information", ButtonType.YES,  ButtonType.CANCEL);
     	 VBox vb1 = new VBox(Firstname,lastname,email,dt,ocupation,entrsc,bio);
     	 alert.getDialogPane().setContent(vb1);
     	 alert.showAndWait();		
      	if (alert.getResult() == ButtonType.YES) {
      		AcceuilController.usconnected.setActualOccupation(ocupation.getText());
      		AcceuilController.usconnected.setEntreschool(entrsc.getText());
      		AcceuilController.usconnected.setEmail(email.getText());
      		AcceuilController.usconnected.setBio(bio.getText());
      		AcceuilController.usconnected.setBirthDate(Date.valueOf(dt.getValue()));
      		AcceuilController.usconnected.setFirstname(Firstname.getText());
      		AcceuilController.usconnected.setLastname(lastname.getText());
      		
				context = new InitialContext();
				dao = (UserServiceEjbRemote) context.lookup(jndi);
		 		
	 			dao.updateUser(AcceuilController.usconnected);
	 			JOptionPane.showMessageDialog(null, "Your School is updated","Display Message",JOptionPane.INFORMATION_MESSAGE);
	 	
	 			AcceuilController.usconnected=dao.updateUser(AcceuilController.usconnected);
	 			initialize(null, null);

      	}
    

    }


    @FXML
    private void addskillAction(MouseEvent event) {
    
    

    	
    	
    	Alert alert = new Alert(AlertType.INFORMATION, " Add new skill", ButtonType.YES,  ButtonType.CANCEL);
    	 ComboBox<String> specialitycombo=new ComboBox<>();
 		
		 Slider evaluates =new Slider();
//	      <Slider fx:id="evaluates" layoutX="165.0" layoutY="257.0" majorTickUnit="10.0" max="10.0" min="1.0" minorTickCount="1" showTickLabels="true" showTickMarks="true" value="1.0" />
	evaluates.setMajorTickUnit(10.0);
	evaluates.setMax(10.0);
	evaluates.setMinorTickCount(1);
	evaluates.setShowTickLabels(true);
	evaluates.setShowTickLabels(true);
	
		 TextField names=new TextField();
		 ObservableList<String> options= FXCollections.observableArrayList("Informatique","Literature","Medecine","Bricolage");
specialitycombo.setItems(options);
Label l=new Label("Evaluate your self");
specialitycombo.setPromptText("Spciality");
VBox vb1 = new VBox(names,specialitycombo,l,evaluates);
alert.getDialogPane().setContent(vb1);
names.setPromptText("name of your skill");




alert.showAndWait();		
    	if (alert.getResult() == ButtonType.YES) {
    		Context context;
			try {
				
	    		Skill s=new Skill();
	    		s.setName(names.getText());
	    		
	    		s.setRating((int) evaluates.getValue());
	    		s.setSpecialite(specialitycombo.getValue());
	    		s.setUser(AcceuilController.usconnected);
	    		context = new InitialContext();
				dao = (UserServiceEjbRemote) context.lookup(jndi);
	    		dao.AddSkill(s);
	    		JOptionPane.showMessageDialog(null, "Your Skill is added","Display Message",JOptionPane.INFORMATION_MESSAGE);
	    		AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	

	    		initialize(null, null);		
			} catch (NamingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    	
    	
    							
    	}
    
    
    }

    @FXML
    private void addexpAction(MouseEvent event) throws NamingException {
    
    	TextField namej=new TextField();
    	namej.setPromptText("name of your job");
  
    	
    	DatePicker datedebexp=new DatePicker();
    	datedebexp.setPromptText("date of start");
    	   
    	 DatePicker datefexp=new DatePicker();
     	datefexp.setPromptText("date of end");

    	 TextField entreprisen=new TextField();
    	 entreprisen.setPromptText("name of entreprise");
    	 TextArea missionta=new TextArea();
    	 missionta.setPromptText("describe your mission");
    	 
    	 
    	 Alert alert = new Alert(AlertType.INFORMATION, " Add new experience", ButtonType.YES,  ButtonType.CANCEL);
    	 VBox vb1 = new VBox(namej,entreprisen,datedebexp,datefexp,missionta);
    	 alert.getDialogPane().setContent(vb1);
    	 alert.showAndWait();		
     	if (alert.getResult() == ButtonType.YES) {
     	
 			ProfessionalExp pe=new ProfessionalExp();
			
			pe.setDatedebut(Date.valueOf(datedebexp.getValue()));
			pe.setDatefin(Date.valueOf(datefexp.getValue()));
			pe.setJobdescription(missionta.getText());
			pe.setJobname(namej.getText());
			pe.setEntrepriseName(entreprisen.getText());
			context = new InitialContext();
			dao = (UserServiceEjbRemote) context.lookup(jndi);
			pe.setUser(AcceuilController.usconnected);
			dao.AddProfessionalExp(pe);
			JOptionPane.showMessageDialog(null, "Your Experience is added","Display Message",JOptionPane.INFORMATION_MESSAGE);
	
			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	

			initialize(null, null);
     	
     	
     							
     	}    
    
    
    }

    @FXML
    private void addeducaction(MouseEvent event) throws NamingException {
        
    	TextField namespeciality=new TextField();
    	namespeciality.setPromptText("name of your Speciality");
  
    	 ComboBox<String> degreecombo=new ComboBox<>();
    	ObservableList<String> options= FXCollections.observableArrayList("Engineering","Master","doctoral degree","Licence");  	
    	degreecombo.setPromptText("speciality");
    	degreecombo.setItems(options);
    	DatePicker datedebeduc=new DatePicker();
    	datedebeduc.setPromptText("date of start");
    	   
    	 DatePicker datefeduc=new DatePicker();
    	 datefeduc.setPromptText("date of end");

    	 TextField schoolnam=new TextField();
    	 schoolnam.setPromptText("name of school");
    	 
    	 
    	 Alert alert = new Alert(AlertType.INFORMATION, " Add new diplome", ButtonType.YES,  ButtonType.CANCEL);
    	 VBox vb1 = new VBox(namespeciality,degreecombo,schoolnam,datedebeduc,datefeduc);
    	 alert.getDialogPane().setContent(vb1);
    	 alert.showAndWait();		
     	if (alert.getResult() == ButtonType.YES) {
     	
    		Education ed=new Education();
    		ed.setDatedeb(Date.valueOf(datedebeduc.getValue()));
    		ed.setDatefin(Date.valueOf(datefeduc.getValue()));
    		ed.setDegree(degreecombo.getValue());
    		ed.setUser(AcceuilController.usconnected);
    		ed.setSchool(schoolnam.getText());
    		ed.setSpecialite(namespeciality.getText());
    		
			context = new InitialContext();
			dao = (UserServiceEjbRemote) context.lookup(jndi);
		
			dao.Addeducation(ed);
			JOptionPane.showMessageDialog(null, "Your School is added","Display Message",JOptionPane.INFORMATION_MESSAGE);
	
			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	

			initialize(null, null);
     	
     	
     							
     	}    
    
    
    
    
    }
    
    
    
    @FXML
    private void addcertifiAction(MouseEvent event) throws NamingException {
        
    	TextField namescertif=new TextField();
    	namescertif.setPromptText("name of your certifications");

   	 TextField centernam=new TextField();
   	 centernam.setPromptText("center name");
   	 
    	 ComboBox<String> specombo=new ComboBox();
    	ObservableList<String> options= FXCollections.observableArrayList("Informatique","Literature","Medecine","Bricolage");
specombo.setPromptText("speciality");
    	specombo.setItems(options);
    	
    	DatePicker datecertif=new DatePicker();
    	datecertif.setPromptText("date of certification");	
    	
    	
    
    	   

    	 Alert alert = new Alert(AlertType.INFORMATION, " Add new diplome", ButtonType.YES,  ButtonType.CANCEL);
    	 VBox vb1 = new VBox(namescertif,specombo,centernam,datecertif);
    	 alert.getDialogPane().setContent(vb1);
    	 alert.showAndWait();		
     	if (alert.getResult() == ButtonType.YES) {
    		certification cert=new certification();
    		cert.setDateissue(Date.valueOf(datecertif.getValue()));
    		cert.setField(specombo.getValue());
    		cert.setName(namescertif.getText());
    		cert.setUser(AcceuilController.usconnected);
    		cert.setCentrecertif(centernam.getText());
    		context = new InitialContext();
			dao = (UserServiceEjbRemote) context.lookup(jndi);
		
    		dao.Addcertification(cert);
    		JOptionPane.showMessageDialog(null, "Your Certification is added","Display Message",JOptionPane.INFORMATION_MESSAGE); 
    		
			
	
			AcceuilController.usconnected=dao.Loginbymailpwd(AcceuilController.usconnected.getEmail(), AcceuilController.usconnected.getPassword());	    	

			initialize(null, null);
     	
     	
     							
     	}    
    
    
    
    
    }
    
    
    
    
    
    
}
